%define release_str %RELEASE_STR%
%define ver %VER%
%define buildarch %BUILDARCH%
%define BEEGFS_COMMON_PATH %BEEGFS_COMMON_PATH%
%define BEEGFS_OPENTK_PATH %BEEGFS_OPENTK_PATH%
%define BEEGFS_THIRDPARTY_PATH %BEEGFS_THIRDPARTY_PATH%
%define PREFIX /opt/beegfs
%define BEEGFS_VERSION %VER%-%RELEASE_STR%
%define MAKE_CONCURRENCY %MAKE_CONCURRENCY%
%define NEED_DEBUG_DEFINE %NEED_DEBUG_DEFINE%


%define is_fedora %(test -e /etc/fedora-release && echo 1 || echo 0)
%define is_redhat %(test -e /etc/redhat-release && echo 1 || echo 0)
%define is_suse %(test -e /etc/SuSE-release && echo 1 || echo 0)
%define is_mandrake %(test -e /etc/mandrake-release && echo 1 || echo 0)

%if %is_mandrake
%define disttag mdk
%endif

%if %is_suse
%define disttag suse
%define distver %(relpackage="`rpm -qf /etc/SuSE-release`"; release="`rpm -q --queryformat='%{VERSION}' $relpackage 2> /dev/null | tr . : | sed s/:.*$//g`" ; if test $? != 0 ; then release="" ; fi ; echo "$release")
%endif

%if %is_fedora
%define disttag fc
%endif

%if %is_redhat
%define disttag el
%define distver %(relpackage="`rpm -qf /etc/redhat-release`"; release="`rpm -q --queryformat='%{VERSION}' $relpackage 2> /dev/null | tr . : | sed s/:.*$//g`" ; if test $? != 0 ; then release="" ; fi ; echo "$release")
%endif

%if %{defined disttag}
%define release %{disttag}%{distver}
%else
%define release generic
%endif


Summary: BeeGFS DEEP-ER library
Name: %NAME%
Version: %{ver}.%{release_str}
Release: %release
License: BeeGFS EULA
Group: Software/Other
Source: %NAME%-%{ver}-%{release_str}.tgz
URL: http://www.beegfs.com
Vendor: Fraunhofer ITWM
BuildRoot: %{_tmppath}/%NAME%-root
BuildArch: %{buildarch}
Requires: zlib
Conflicts: beegfs_deeper_lib

%description
The package contains the BeeGFS DEEP-ER library.

%if %{NEED_DEBUG_DEFINE}
%debug_package
%endif


%post
ldconfig

%postun
ldconfig

%prep
%setup -c

%build
cd build

# build
make BEEGFS_VERSION=%{BEEGFS_VERSION}            \
	BEEGFS_COMMON_PATH=%{BEEGFS_COMMON_PATH} \
	BEEGFS_OPENTK_PATH=%{BEEGFS_OPENTK_PATH} \
	BEEGFS_THIRDPARTY_PATH=%{BEEGFS_THIRDPARTY_PATH} \
	-j%{MAKE_CONCURRENCY}                            \
	package_lib


%install
mkdir -p ${RPM_BUILD_ROOT}/%{PREFIX}/lib/
cp -a build/libbeegfs-deeper.so ${RPM_BUILD_ROOT}/%{PREFIX}/lib
mkdir -p ${RPM_BUILD_ROOT}/etc/beegfs/
cp -a build/dist/etc/beegfs/beegfs-deeper-lib.conf ${RPM_BUILD_ROOT}/etc/beegfs/
mkdir -p ${RPM_BUILD_ROOT}/etc/ld.so.conf.d/
cp -a build/dist/etc/ld.so.conf.d/beegfs-deeper.conf.in ${RPM_BUILD_ROOT}/etc/ld.so.conf.d/beegfs-deeper.conf
sed -i -e "s#__PREFIX__#%{PREFIX}#" ${RPM_BUILD_ROOT}/etc/ld.so.conf.d/beegfs-deeper.conf
mkdir -p ${RPM_BUILD_ROOT}/usr/include
cp -a include/deeper ${RPM_BUILD_ROOT}/usr/include/
install -D build/dist/usr/share/doc/beegfs-deeper-lib/examples/beegfs-deeper-lib-example.cpp \
	${RPM_BUILD_ROOT}/usr/share/doc/beegfs-deeper-lib/examples/beegfs-deeper-lib-example.cpp
mkdir -p ${RPM_BUILD_ROOT}/usr/lib/
ln -s %{PREFIX}/lib/libbeegfs-deeper.so ${RPM_BUILD_ROOT}/usr/lib/libbeegfs-deeper.so


# for rpm stupidness only!
pushd ${RPM_BUILD_ROOT}/%{PREFIX}/lib/
chmod +x *.so
popd

%files
%defattr(-,root,root)
%config(noreplace) /etc/beegfs/beegfs-deeper-lib.conf
/etc/ld.so.conf.d/beegfs-deeper.conf
%{PREFIX}/lib/libbeegfs-deeper.so
/usr/lib/libbeegfs-deeper.so
/usr/include/deeper
/usr/share/doc/beegfs-deeper-lib/examples/beegfs-deeper-lib-example.cpp

