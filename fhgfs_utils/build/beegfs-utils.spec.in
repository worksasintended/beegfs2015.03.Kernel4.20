%define release_str %RELEASE_STR%
%define ver %VER%
%define buildarch %BUILDARCH%
%define BEEGFS_OPENTK_PATH %BEEGFS_OPENTK_PATH%
%define BEEGFS_COMMON_PATH %BEEGFS_COMMON_PATH%
%define BEEGFS_ONLINE_CFG_PATH %BEEGFS_ONLINE_CFG_PATH%
%define BEEGFS_FSCK_PATH %BEEGFS_FSCK_PATH%
%define BEEGFS_FSCK_LEGACY_PATH %BEEGFS_FSCK_LEGACY_PATH%
%define BEEGFS_THIRDPARTY_PATH %BEEGFS_THIRDPARTY_PATH%
%define BEEGFS_JAVA_LIB_PATH %BEEGFS_JAVA_LIB_PATH%
%define BEEGFS_VERSION %VER%-%RELEASE_STR%
%define MAKE_CONCURRENCY %MAKE_CONCURRENCY%
%define NEED_DEBUG_DEFINE %NEED_DEBUG_DEFINE%

%define is_fedora %(test -e /etc/fedora-release && echo 1 || echo 0)
%define is_redhat %(test -e /etc/redhat-release && echo 1 || echo 0)
%define is_suse %(test -e /etc/SuSE-release && echo 1 || echo 0)
%define is_mandrake %(test -e /etc/mandrake-release && echo 1 || echo 0)

%if %is_mandrake
%define disttag mdk
%endif

%if %is_suse
%define disttag suse
%define distver %(relpackage="`rpm -qf /etc/SuSE-release`"; release="`rpm -q --queryformat='%{VERSION}' $relpackage 2> /dev/null | tr . : | sed s/:.*$//g`" ; if test $? != 0 ; then release="" ; fi ; echo "$release")
%endif

%if %is_fedora
%define disttag fc
%endif

%if %is_redhat
%define disttag el
%define distver %(relpackage="`rpm -qf /etc/redhat-release`"; release="`rpm -q --queryformat='%{VERSION}' $relpackage 2> /dev/null | tr . : | sed s/:.*$//g`" ; if test $? != 0 ; then release="" ; fi ; echo "$release")
%endif

%if %{defined disttag}
%define release %{disttag}%{distver}
%else
%define release generic
%endif


#
# beegfs utils creator
#
Summary: BeeGFS utilities
Name: %NAME%
Version: %{ver}.%{release_str}
Release: %release
License: BeeGFS EULA
Group: Software/Other
Source: %NAME%-%{ver}-%{release_str}.tgz
URL: http://www.beegfs.com
Vendor: Fraunhofer ITWM
BuildRoot: %{_tmppath}/%NAME%-root
BuildArch: %{buildarch}
requires: beegfs-opentk-lib = %{ver}.%{release_str}, beegfs-common = %{ver}.%{release_str}

%description
This package contains BeeGFS utilities.


%if %{NEED_DEBUG_DEFINE}
%debug_package
%endif


%prep
%setup -c

%build
make BEEGFS_OPENTK_PATH=%{BEEGFS_OPENTK_PATH} 		\
	BEEGFS_COMMON_PATH=%{BEEGFS_COMMON_PATH}		\
	BEEGFS_ONLINE_CFG_PATH=%{BEEGFS_ONLINE_CFG_PATH} 	\
	BEEGFS_THIRDPARTY_PATH=%{BEEGFS_THIRDPARTY_PATH}  \
	BEEGFS_FSCK_PATH=%{BEEGFS_FSCK_PATH}              \
	BEEGFS_FSCK_LEGACY_PATH=%{BEEGFS_FSCK_LEGACY_PATH}              \
	BEEGFS_JAVA_LIB_PATH=%{BEEGFS_JAVA_LIB_PATH} \
	BEEGFS_VERSION=%{BEEGFS_VERSION}			\
	-C build/ -j %{MAKE_CONCURRENCY}
	

%install
cd build
echo "mkdir RPM_BUILD_ROOT (${RPM_BUILD_ROOT})"
mkdir -p ${RPM_BUILD_ROOT}
install -D --mode=u+rwxs,g+rx,o+rx beegfs-ctl ${RPM_BUILD_ROOT}/opt/beegfs/sbin/beegfs-ctl
install -D beegfs-fsck ${RPM_BUILD_ROOT}/opt/beegfs/sbin/beegfs-fsck
install -D beegfs-fsck-legacy ${RPM_BUILD_ROOT}/opt/beegfs/sbin/beegfs-fsck-legacy
mkdir -p ${RPM_BUILD_ROOT}/sbin
cp -a ../scripts/fsck.beegfs ${RPM_BUILD_ROOT}/sbin/
mkdir -p ${RPM_BUILD_ROOT}/usr/bin/
ln -s /opt/beegfs/sbin/beegfs-ctl ${RPM_BUILD_ROOT}/usr/bin/beegfs-ctl
ln -s /opt/beegfs/sbin/beegfs-fsck ${RPM_BUILD_ROOT}/usr/bin/beegfs-fsck
cp -a ../scripts/beegfs-* ${RPM_BUILD_ROOT}/usr/bin/
mkdir -p ${RPM_BUILD_ROOT}/opt/beegfs/lib
cp libjbeegfs.so jbeegfs.jar ${RPM_BUILD_ROOT}/opt/beegfs/lib/
mkdir -p ${RPM_BUILD_ROOT}/etc/bash_completion.d
cp -a ../scripts/etc/bash_completion.d/beegfs-ctl ${RPM_BUILD_ROOT}/etc/bash_completion.d/

%post

%preun

%files
%defattr(-,root,root)
/opt/beegfs/sbin/beegfs-ctl
/opt/beegfs/sbin/beegfs-fsck
/opt/beegfs/sbin/beegfs-fsck-legacy
/opt/beegfs/lib/jbeegfs.jar
/opt/beegfs/lib/libjbeegfs.so
/usr/bin/*
/etc/bash_completion.d/*
/sbin/fsck.beegfs
